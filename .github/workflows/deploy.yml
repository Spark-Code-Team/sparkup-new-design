# اسم Workflow شما که در تب Actions گیت‌هاب نمایش داده می‌شه
name: Deploy to Production Server

# این بخش مشخص می‌کنه که Workflow چه زمانی اجرا بشه
on:
  # با هر بار push کردن در برنچ main
  push:
    branches:
      - main

# این بخش شامل تمام کارهایی است که باید انجام شود
jobs:
  deploy:
    # نام این کار
    name: Deploy
    # این کار روی یک ماشین مجازی اوبونتو اجرا می‌شود
    runs-on: ubuntu-latest

    # مراحل انجام کار به ترتیب
    steps:
      # مرحله اول: کد شما را از ریپازیتوری دریافت می‌کند
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          # تمام تاریخچه گیت را می‌گیرد که برای git pull لازم است
          fetch-depth: 0

      # مرحله دوم: اتصال به سرور و اجرای دستورات
      - name: Deploy to Server
        # از یک اکشن آماده و محبوب برای کارهای SSH استفاده می‌کنیم
        uses: appleboy/ssh-action@master
        with:
          # از سکرت‌هایی که در مرحله قبل ساختیم استفاده می‌کنیم
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          # دستوراتی که باید روی سرور اجرا شوند
          script: |
            # به پوشه اصلی پروژه بروید
            cd ~/spark-up/sparkup-new-design
            
            # آخرین نسخه کد را از گیت بگیرید
            git pull
            
            # لاگین به داکر (اگر از ریپازیتوری خصوصی استفاده می‌کنید، این خط را از کامنت خارج کنید)
            # echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            
            # ایمیج‌ها را دوباره بسازید و کانتینرها را با نسخه جدید جایگزین کنید
            docker compose up -d --build
            
            # ایمیج‌های قدیمی و بدون استفاده را پاک کنید تا فضا آزاد شود
            docker image prune -f

